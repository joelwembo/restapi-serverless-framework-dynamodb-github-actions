name: CI/CD serverless-typescript workflows

on:
  push:
    branches: 
        - main
        - master
        - develop
        - 'release/*'
    tags: 
        - prod-v*
  pull_request:
    branches: 
        - main
        - master
        - develop
        - 'release/*'

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: "ap-southeast-1"                

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
    - name: Use Node.js 18.x
      uses: actions/setup-node@v1
      with:
        node-version: 18.x
    - name: Install dependencies
      run: npm install

  uat:
    runs-on: ubuntu-latest
    needs: build
    steps:   
      - uses: actions/checkout@v3
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: Install serverless Globally
        run: npm install -g serverless     
      - name: End to End Tests
        run: serverless --version

  deploy:
    runs-on: ubuntu-latest
    needs: uat
    steps:
    - uses: actions/checkout@v3
    - uses: actions/cache@v2
      with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
          node-version: 18.x
    - name: Install dependencies
      run: npm install
    - name: Install serverless Globally
      run: npm install -g serverless     
   
    - name: Check AWS Credentials list
      run: aws configure list     
    - name: Serverless AWS authentication
      run: serverless config credentials --provider aws --key ${{ secrets.AWS_ACCESS_KEY_ID }} --secret ${{ secrets.AWS_SECRET_ACCESS_KEY }}    
   
    - name: serverless deploy
      run: serverless deploy

    
        