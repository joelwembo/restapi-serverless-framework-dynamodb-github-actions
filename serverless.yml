service: restapi-serverless-framework-dynamodb

frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  region: ap-southeast-1
  httpApi:
    cors: true
  profile: 'default'
  stage: dev

custom:
  apiKeys:
    - name: dev1
      deleteAtRemoval: false
    - name: dev2
      deleteAtRemoval: false

  iamRoleStatements:
  - Effect: Allow
    Action:
    - dynamodb:Query
    - dynamodb:PutItem
    - dynamodb:GetItem
    - dynamodb:DeleteItem
    - dynamodb:Scan
    - dynamodb:UpdateItem
    - dynamodb:DescribeTable
    Resource:
      Fn::GetAtt:
      - NoteTable

  - Effect: Allow
    Action:
    - cognito-idp:AdminConfirmSignUp
    Resource:
    - !Sub arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${CognitoUserPool}
  environment:
    DYNAMODB_TABLE_NAME: "NoteTable"
    COGNITO_CLIENT_ID:
      Ref: CognitoUserPoolClient
    COGNITO_USER_POOL_ID:
      Ref: CognitoUserPool

plugins:
  - serverless-plugin-typescript
  - serverless-iam-roles-per-function
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-add-api-key

#resources
resources:
  Resources:
    NoteTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: NoteTable
        KeySchema:
        - AttributeName: userEmail
          KeyType: HASH
        - AttributeName: noteDate
          KeyType: RANGE
        AttributeDefinitions:
        - AttributeName: userEmail
          AttributeType: N
        - AttributeName: noteDate
          AttributeType: N
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    CognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: noteAppUserPool
        Schema:
        - Name: email
          AttributeDataType: String
          Mutable: true
          Required: true
        Policies:
          PasswordPolicy:
            MinimumLength: 8
    CognitoUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: noteAppUserPoolClient
        GenerateSecret: false
        UserPoolId:
          Ref: CognitoUserPool
        ExplicitAuthFlows:
        - USER_PASSWORD_AUTH

functions:
  addNote:
      handler: services/notes/functions/addNote.handler
      events:
      - http:
          method: post
          path: /note
          private: true
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
            allowCredentials: false
  deleteNote:
      handler: services/notes/functions/deleteNote.handler
      events:
      - http:
          path: /note/{noteDate}
          method: delete
          private: true
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
            allowCredentials: false
  getAllNotes:
      handler: services/notes/functions/getAllNotes.handler
      events:
      - http:
          path: /note
          method: get
          private: true
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
            allowCredentials: false
  registerUser:
      handler: services/notes/functions/register.handler
      events:
      - http:
          method: post
          path: /register
          private: true
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
            allowCredentials: false
  loginUser:
      handler: services/notes/functions/login.handler
      events:
      - http:
          method: post
          path: /login
          private: true
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
            allowCredentials: false

  hello:
    handler: services/index.handler
    events:
      - http:
          path: /hello
          method: post
          private: true
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
            allowCredentials: false

    